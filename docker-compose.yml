version: '3.8'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - backend
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  # reachable on 9092 from the host and on 29092 from inside docker compose
  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - backend
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    expose:
      - '29092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_MIN_INSYNC_REPLICAS: '1'

  init-kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - backend
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic orders-topic --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic order-items-topic --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic order-review-topic --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.1.0
    networks:
      - backend
    hostname: control-center
    ports:
      - "9021:9021"
    depends_on:
      - zookeeper
      - kafka
    environment:
      - CONTROL_CENTER_BOOTSTRAP_SERVERS=kafka:29092
      - CONTROL_CENTER_ZOOKEEPER_CONNECT=zookeeper:2181
      - CONTROL_CENTER_CONNECT_CLUSTER=http://localhost:8083
      - CONTROL_CENTER_KSQL_KSQLDB1_URL=http://localhost:8088
      - CONTROL_CENTER_REPLICATION_FACTOR=1

  frontend-simulator:
    build: 
        dockerfile: Dockerfile
        context: .
        target: frontend-simulator-production
    networks:
      - backend
    depends_on:
        - init-kafka
    ports:
      - "8080:8080"
    command: make run
    
networks:
    backend:
      driver: bridge
